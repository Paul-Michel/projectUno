/**
 * This module does more escaping than specified in standard JSON.
 * The escaping of characters like >, <, &, \u2028 and \u2029 is done to make
 * it safe to insert the JSON inside of script tags.  The extra encoding is
 * done using Unicode code points to make the JSON string compatible with
 * the standard JSON parsing method.
 *
 * This code is based on the ActiveSupport JSON encoding module.
 *
 * https://github.com/rails/rails/blob/master/activesupport/lib/active_support/json/encoding.rb
 **/
module.exports = JSONEncoding = {

    ESCAPED_CHARS: {
        '\u2028' : '\\u2028',
        '\u2029' : '\\u2029',
        '>'      : '\\u003e',
        '<'      : '\\u003c',
        '&'      : '\\u0026'
    },

    ESCAPE_REGEX_WITH_HTML_ENTITIES: /[\u2028\u2029><&]/g,

    //////////////////////////////////////////////////////////////////////////
    // Public methods ///////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////

    encode: function (json) {
        if (typeof json === 'undefined') {
            return json;
        }

        var self = this;

        return json
            .replace(
                this.ESCAPE_REGEX_WITH_HTML_ENTITIES,
                function (character) {
                    return self.ESCAPED_CHARS[character];
                }
            );
    },

    stringify: function (data) {
        return this.encode(JSON.stringify(data));
    }
};