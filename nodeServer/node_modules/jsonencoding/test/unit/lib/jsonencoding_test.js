var should       = require('should'),
    JSONEncoding = require('../../../lib/jsonencoding');

describe('lib/jsonencoding.js', function () {
    var testCases = [
        {
            value: "foo & bar",
            expected: '\"foo \\u0026 bar\"'
        },
        {
            value: { a: 1 },
            expected: '{"a":1}'
        },
        {
            value: { a: 'html' },
            expected: '{"a":"html"}'
        },
        {
            value: { a: 'some "string" here' },
            expected: '{"a":"some \\"string\\" here"}'
        },
        {
            value: { a: 'foo & bar' },
            expected: '{"a":"foo \\u0026 bar"}'
        },
        {
            value: { a: '<a href="http://google.com/">Google</a>' },
            expected: '{"a":"\\u003ca href=\\"http://google.com/\\"\\u003eGoogle\\u003c/a\\u003e"}'
        },
        {
            value: { a: '</script><script>alert(\'owned!\')</script>' },
            expected: '{"a":"\\u003c/script\\u003e\\u003cscript\\u003ealert(\'owned!\')\\u003c/script\\u003e"}'
        },
        {
            value: ['foo & bar'],
            expected: '["foo \\u0026 bar"]'
        },
        {
            value: { a: 'foo & bar', b: ['<foo>', 'bar & baz'] },
            expected: '{"a":"foo \\u0026 bar","b":["\\u003cfoo\\u003e","bar \\u0026 baz"]}'
        },
        {
            value: { 'foo & bar': 1 },
            expected: '{"foo \\u0026 bar":1}'
        },
        {
            value: { '<a href="http://google.com/">Google</a>': 1 },
            expected: '{"\\u003ca href=\\"http://google.com/\\"\\u003eGoogle\\u003c/a\\u003e":1}'
        },
        {
            value: { '</script><script>alert(\'owned!\')</script>': 1 },
            expected: '{"\\u003c/script\\u003e\\u003cscript\\u003ealert(\'owned!\')\\u003c/script\\u003e":1}'
        },
        {
            value: { a: { 'foo & bar': 1 } },
            expected: '{"a":{"foo \\u0026 bar":1}}'
        }
    ];

    describe('encode', function () {
        testCases.forEach(function (testCase) {
            it('should properly escape values', function () {
                JSONEncoding.encode(JSON.stringify(testCase.value)).should.eql(testCase.expected);
            });
        });
    });

    describe('stringify', function () {
        testCases.forEach(function (testCase) {
            it('should properly escape values', function () {
                JSONEncoding.stringify(testCase.value).should.eql(testCase.expected);
            });

            it('should be compatible with standard JSON parse', function () {
                JSON.parse(JSONEncoding.stringify(testCase.value)).should.eql(testCase.value);
            });
        });
    });
});